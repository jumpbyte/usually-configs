<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans classpath:/org/springframework/beans/factory/xml/spring-beans-4.1.xsd
				http://www.springframework.org/schema/context classpath:/org/springframework/context/config/spring-context-4.1.xsd
				http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
				http://www.springframework.org/schema/tx classpath:/org/springframework/transaction/config/spring-tx-4.1.xsd">

	<context:annotation-config />

	<context:component-scan base-package="com.jumpbyte">
	</context:component-scan>
	<!-- 引入配置文件 -->
	<context:property-placeholder location="classpath*:*.properties" />

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<!--驱动器名称 -->
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${jdbc.initialSize}"></property>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${jdbc.maxActive}"></property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${jdbc.minIdle}"></property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${jdbc.maxWait}"></property>
	</bean>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="configLocations">
			<list>
				<value>classpath:hibernate.cfg.xml</value>
			</list>
		</property>
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
    <!-- spring 事务配置 -->
	<!--proxy-target-class=true启用CGLib字节代理   默认为JDK动态代理-->
	<aop:aspectj-autoproxy proxy-target-class="true" /><!--@AspectJ切面-->
	<aop:config expose-proxy="true" proxy-target-class="true" >
		<!-- 只对业务逻辑层实施事务 -->
		<aop:pointcut id="txPointcut" expression="execution(* com.jumpbyte.service.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<!--提供注解式事务支持-->
	<tx:annotation-driven transaction-manager="transactionManager" />
</beans>